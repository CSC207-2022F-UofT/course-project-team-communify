package ViewModel;
import Presenter.playlistPresenter;
/**
 * The interface adapters layer view model which acts as a gateway between the view and the playlist related
 * parts of the program.
 */
public class playlistViewModel {
    private playlistPresenter playlistPresenter;
    private String outputMessage;

    public playlistViewModel(){
        // get necessary information from View to construct a new playlist
        //TODO: This is the controller, just pass this to the controller, move to controller
        //TODO: Create controller once in the view as an instance variable / pass as a parameter in main

        //Blank output data object to extract success message from
        //sets its presenter to itself
        this.playlistPresenter = new playlistPresenter(this);
    }

    /**
     * @param message the message to be outputted to the view
     */
    public void setOutputMessage(String message){
        this.outputMessage = message;
    }

    /**
     * @return the message to be outputted to the view.
     */
    public String getOutputMessage(){
        return this.outputMessage;

    }

    //TODO: keeping this uncommented just in case I may need it later, but will delete in a future push
//    /**
//     *
//     * @param id ID given by view
//     * @param user User object given by view
//     * @param playlistName playlist name given by view
//     *  Overloaded method for creating an empty playlist
//     */
//    public playlistViewModel(int id, RegularUser user, String playlistName){
//        // get necessary information from View to construct a new playlist
//        newPlaylistInputData inputData = new newPlaylistInputData(id,playlistName,user);
//        //Blank output data object to extract success message from
//        this.playlistPresenter = new playlistPresenter(this);
////        this.newPlaylistController = new newPlaylistController(inputData,playlistPresenter);
//    }

    /**
     * @return output message generated by the Controller and update the presenter's outputMessage with it as well
     */
//    public String callNewPlaylistUseCase(int id, RegularUser user, String playlistName, Song firstSong){
//        this.newPlaylistController.createNewPlaylist(id,user,playlistName,firstSong);
//        String msg = this.playlistPresenter.getOutputMessage();
//        return msg;
//    }
}
