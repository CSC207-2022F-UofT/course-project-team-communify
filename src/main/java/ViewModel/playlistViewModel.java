package ViewModel;
import Controller.newPlaylistController;
import Entities.RegularUser;
import Entities.Song;
import InputData.newPlaylistInputData;
import OutputData.newPlaylistOutputData;
import UseCase.createPlaylist;


import Presenter.playlistPresenter;
public class playlistViewModel {
    private final newPlaylistController newPlaylistController;
    private  playlistPresenter playlistPresenter;

    public playlistViewModel(int id, RegularUser user, String playlistName, Song firstSong){
        // get necessary information from View to construct a new playlist
        newPlaylistInputData inputData = new newPlaylistInputData(id,playlistName,firstSong,user);
        //Blank output data object to extract success message from
        newPlaylistOutputData outputData = new newPlaylistOutputData("");
        this.playlistPresenter = new playlistPresenter(this, outputData);
//        newPlaylistInputBoundary newPlaylistInputBoundary = InputBoundary.newPlaylistInputBoundary;
        createPlaylist newPlay= new createPlaylist();
        this.newPlaylistController = new newPlaylistController(newPlay,inputData);
        //TODO: Does this violate clean architecture ?
    }

    /**
     *
     * @return output message generated by the Controller and update the presenter's outputMessage with it as well
     */
    public String callNewPlaylistUseCase(){
        String msg =  this.newPlaylistController.createPlaylist();
        newPlaylistOutputData outputData = new newPlaylistOutputData(msg);
        playlistPresenter.setOutputMessage(outputData.getCreatedMessage());
        return msg;
    }
}
